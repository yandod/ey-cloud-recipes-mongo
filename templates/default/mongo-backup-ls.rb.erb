#!/usr/bin/env ruby

require 'rubygems'
require 'aws/s3'
require 'date'
require 'digest'
require 'net/http'
require 'fileutils'

module AWS::S3
  class S3Object
    def <=>(other)
      DateTime.parse(self.about['last-modified']) <=> DateTime.parse(other.about['last-modified'])
    end
  end
end

AWS::S3::Base.establish_connection!(
  :access_key_id     => '<%= @id_key %>',
  :secret_access_key => '<%= @secret_key %>'
)

@databases = `mongo --quiet --eval "db.runCommand('listDatabases').databases.forEach(function(db){ if(db.sizeOnDisk > 1) {print(db.name)}});" admin`.split("\n")
@ismaster = `mongo --quiet --eval 'printjson(db.runCommand("ismaster"))' | grep ismaster | awk '{print $3}'| sed s/,//`.strip
@environment = '<%= @env %>'
@app_name = '<%= @app_name %>'
@keep = 10 * @databases.length
@bucket = "ey-backup-#{Digest::SHA1.hexdigest('<%= @id_key %>')[0..11]}-mongo"
@tmpname = "#{Time.now.strftime("%Y-%m-%dT%H:%M:%S").gsub(/:/, '-')}"
FileUtils.mkdir_p '/mnt/tmp'
begin
  AWS::S3::Bucket.create @bucket
rescue AWS::S3::BucketAlreadyExists
end

backups = []
backups << AWS::S3::Bucket.objects(@bucket).sort
backups = backups.flatten.sort
backups.each do |object|
  puts object.url
end
